#!/bin/sh

# This pre-push hook ensures that we only push branches with up to date files in `dist/`.
#
# While at it, it also ensures that it is itself up to date with `pre-push.hook`

die () {
    echo "$*" >&2
    exit 1
}

LF='
'

git diff --no-index --quiet pre-push.hook "$(git rev-parse --git-path hooks/pre-push)" ||
die 'The `pre-push` hook is not up to date with `pre-push.hook`. Please update:

	cp pre-push.hook .git/hooks/pre-push'

# Verify that any tagged version is reflected in its `package.json`
for tag in $(git for-each-ref --format='%(refname:short)' --points-at=HEAD 'refs/tags/v[0-9]*')
do
    out="$(git tag --verify $tag 2>&1)" ||
    die "$out$LF${LF}Tag $tag is not signed/signature cannot be verified"

    test 0 = $(git rev-list --count ...main) || die 'HEAD is not up to date with `main`'
    test 0 = $(git rev-list --count ...origin/main) ||
    echo 'warning: HEAD is not up to date with `origin/main`' >&2

    regex="^  \"version\": \"$(echo "${tag#v}" | sed 's/\./\\./g')\",\$"
    substitute="/\"name\": \"get-azure-pipelines-artifact\"/{N;s/\\(\"version\": \"\\).*\",\$/\\1${tag#v}\",/}"
    git grep -q "$regex" refs/tags/$tag -- package.json || {
        sed "$substitute" <package.json >package.json.new &&
        mv -f package.json.new package.json
        sed "$substitute" <package-lock.json >package-lock.json.new &&
        mv -f package-lock.json.new package-lock.json
        die "package.json did not reflect $tag; It was adjusted."
        exit 1
    }

    git grep -q "$regex" refs/tags/$tag -- package-lock.json || {
        sed "$substitute" <package-lock.json >package-lock.json.new &&
        mv -f package-lock.json.new package-lock.json
        die "package-lock.json did not reflect $tag; It was adjusted."
        exit 1
    }
done

git diff --quiet dist/ ||
die '`dist/` is dirty'

base="$(git rev-list HEAD -1 -- dist/)"
if test 0 -lt $(git rev-list --count ${base+$base..}HEAD -- \*.ts package-lock.json)
then
    echo "Verifying that dist/ is up to date" >&2
    npm run build &&
    npm run package &&
    if ! git diff --quiet dist/
    then
        echo "Committing dist/ because it was not up to date" >&2
        git commit -sm "npm run build && npm run package" dist/
    fi
fi
